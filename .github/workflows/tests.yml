name: ORIOLL TEST CODE 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: orioll_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql, xml, ctype, json
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run database migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: orioll_db
          DB_USERNAME: root
          DB_PASSWORD: root 
        run: php artisan migrate

      # - name: Run tests
      #   env:
      #     DB_CONNECTION: mysql
      #     DB_HOST: 127.0.0.1
      #     DB_PORT: 3306
      #     DB_DATABASE: orioll_db
      #     DB_USERNAME: root
      #     DB_PASSWORD: root
      #   run: vendor/bin/phpunit

      # - name: Afficher les journaux Laravel en cas d'Ã©chec
      #   if: failure()
      #   run: cat storage/logs/laravel.log

      deploy:
        needs: laravel-tests
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v2

          - name: Setup SSH
            uses: webfactory/ssh-agent@v0.5.3
            with:
              ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          - name: Deploy to Server
            run: |
              ssh -o StrictHostKeyChecking=no root@srv482573.hstgr.cloud 'cd /var/www/orioll.com/public_html && git pull origin main && composer install --no-interaction --prefer-dist --optimize-autoloader && php artisan migrate --force && php artisan config:cache && php artisan route:cache && php artisan view:cache && sudo systemctl restart php8.2-fpm'

